pipeline {
    agent any
    environment {
        GIT_REPO = 'https://github.com/beetlebum97/helloworld.git'
    }
    stages {
        stage('Get Code') {
            agent { label 'maestro' }
            environment { 
                PYTHONPATH = "${env.WORKSPACE}" 
                FLASK_APP = "${env.PYTHONPATH}/app/api.py" 
            }
            steps {
                sh '''
                    whoami
                    hostname
                '''
                echo "WORKSPACE: ${env.WORKSPACE}"
                sh '''
                    echo "CÃ³digo fuente descargado/actualizado por 'Pipeline script from SCM'"
                    ls -la ${PYTHONPATH}
                '''
                stash includes: '**', name: 'source_code'
            }
        }
        stage('Build') {
            agent { label 'maestro' }
            steps {
                echo 'No hace nada (^_^)'
            }
        }
        stage('Tests') {
            agent { label 'esclavo1' }
            environment { 
                PYTHONPATH = "${env.WORKSPACE}" 
                FLASK_APP = "${env.PYTHONPATH}/app/api.py" 
            }
            stages {
                stage('Parallel Tests') {
                    parallel {
                        stage('Unit') {
                            steps {
                                unstash 'source_code'
                                sh '''
                                    whoami
                                    hostname
                                '''
                                sh 'pytest --junitxml=result-unit.xml ${PYTHONPATH}/test/unit'
                                stash includes: 'result-unit.xml', name: 'rest_results'
                            }
                        }
                        stage('Rest') {
                            steps {
                                unstash 'source_code'
                                sh 'flask run &'
                                sh '''
                                    java -jar /opt/unir/wiremock-standalone-3.10.0.jar --port 9090 --root-dir ${PYTHONPATH}/test/wiremock &
                                    while ! nc -z localhost 9090; do
                                        sleep 2
                                    done
                                    '''
                                sh 'pytest --junitxml=result-rest.xml ${PYTHONPATH}/test/rest/'
                                stash includes: 'result-rest.xml', name: 'rest_results'
                            }
                        }
                    }
                }
            }
        }
        stage('Results') {
            agent { label 'esclavo2' }
            environment { 
                PYTHONPATH = "${env.WORKSPACE}" 
                FLASK_APP = "${env.PYTHONPATH}/app/api.py" 
            }
            steps {
                unstash 'rest_results'
                sh '''
                    whoami
                    hostname
                '''
                junit 'result*.xml'
            }
        }
    }
}
